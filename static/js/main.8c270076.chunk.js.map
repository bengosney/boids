{"version":3,"sources":["Vector2D.js","boid.js","App.js","serviceWorker.js","index.js"],"names":["Vector2D","x","y","Object","classCallCheck","this","v","rad","cos","Math","sin","round","hypot","equals","sqrt","dot","divide","length","min","max","atan2","a","b","clone","add","subtract","multiply","deg","rotate","distance","boid","parent","r","id","pos","direction","velocity","maxTurn","vision","visionArc","center","size","minDist","avoiding","turning","_this","boids","map","objectSpread","getDistanceTo","filter","radians","angleTo","amt","frameTime","t","turn","_this2","visible","getVisible","numVis","sort","forEach","turnFrom","avgValues","reduce","acc","cur","avgVect","avgAng","turnTo","inBounds","value","_this$parent$state","state","width","height","set","_this$parent","ctx","_debug","debug","_this$pos","save","translate","toAngles","beginPath","strokeStyle","moveTo","lineTo","closePath","stroke","arc","restore","PI","fillStyle","fill","font","fillText","concat","App","props","_super","call","log","drawing","data","count","updateWindowDimensions","bind","assertThisInitialized","frame","line","push","setState","time","pixelSize","noise","rows","ceil","cols","mod","Array","parseFloat","toFixed","canvas","refs","getContext","window","addEventListener","rAF","requestAnimationFrame","updateAnimationState","_this$updateWindowDim","i","floor","random","_window","innerWidth","innerHeight","cancelAnimationFrame","removeEventListener","ts","getTS","clearFrame","drawScene","nextFrame","_this3","_this$state","clearRect","Date","getTime","r1","r2","x1","y1","x2","y2","current","_this$prevTime","prevTime","diff","_this$state2","cutoff","color","speed","getFrameTime","doFrame","draw","_this4","_this$state3","react_default","createElement","className","htmlFor","onChange","e","target","from","keys","key","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yRAmJeA,aAlJX,SAAAA,EAAYC,EAAGC,GAAIC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfK,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,kDAGTI,GASN,OARUA,aAAaN,GACtBK,KAAKJ,GAAKK,EAAEL,EACZI,KAAKH,GAAKI,EAAEJ,IAEZG,KAAKJ,GAAKK,EACVD,KAAKH,GAAKI,GAGJD,sCAOIC,GAQX,OAPIA,aAAaN,GAChBK,KAAKJ,GAAKK,EAAEL,EACZI,KAAKH,GAAKI,EAAEJ,IAEZG,KAAKJ,GAAKK,EACVD,KAAKH,GAAKI,GAEJD,sCAOCC,GAQR,OAPIA,aAAaN,GAChBK,KAAKJ,GAAKK,EAAEL,EACZI,KAAKH,GAAKI,EAAEJ,IAEZG,KAAKJ,GAAKK,EACVD,KAAKH,GAAKI,GAEJD,oCAODC,GAUN,OATIA,aAAaN,GACN,GAAPM,EAAEL,IAAQI,KAAKJ,GAAKK,EAAEL,GACf,GAAPK,EAAEJ,IAAQG,KAAKH,GAAKI,EAAEJ,IAEjB,GAALI,IACFD,KAAKJ,GAAKK,EACVD,KAAKH,GAAKI,GAGLD,oCAODE,GAAK,IACHN,EAASI,KAATJ,EAAGC,EAAMG,KAANH,EAEFM,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,GAIrBF,KAAKJ,EAAIQ,KAAKE,MAFN,KAEgBV,EAAIO,EAAMN,EAAIQ,IAF9B,IAGXL,KAAKH,EAAIO,KAAKE,MAHH,KAGaV,EAAIS,EAAMR,EAAIM,IAH3B,qCAUHF,GACR,OAAOG,KAAKG,MAAMP,KAAKJ,EAAIK,EAAEL,EAAGI,KAAKH,EAAII,EAAEJ,kCAOlCI,GACT,OAAOD,KAAKJ,GAAKK,EAAEL,GAAKI,KAAKH,GAAKI,EAAEJ,gCAG/BI,GACL,OAAOD,KAAKQ,OAAOP,+BAGhBA,GACH,OAAOD,KAAKJ,EAAIK,EAAEL,EAAII,KAAKH,EAAII,EAAEJ,gCAGzBI,GACR,OAAOD,KAAKJ,EAAIK,EAAEJ,EAAIG,KAAKH,EAAII,EAAEL,mCAIjC,OAAOQ,KAAKK,KAAKT,KAAKU,IAAIV,2CAI1B,OAAOA,KAAKW,OAAOX,KAAKY,wCAIxB,OAAOR,KAAKS,IAAIb,KAAKJ,EAAGI,KAAKH,iCAI7B,OAAOO,KAAKU,IAAId,KAAKJ,EAAGI,KAAKH,qCAI7B,OAAQO,KAAKW,MAAMf,KAAKH,EAAGG,KAAKJ,sCAIhC,OAAQQ,KAAKW,OAAOf,KAAKH,EAAGG,KAAKJ,mCAGvBoB,GACV,OAAQZ,KAAKW,MAAMC,EAAEnB,EAAIG,KAAKH,EAAGmB,EAAEpB,EAAII,KAAKJ,mCAI5C,OAAO,IAAID,EAASK,KAAKJ,EAAGI,KAAKH,+BAG9BD,EAAGC,GAEN,OADAG,KAAKJ,EAAIA,EAAGI,KAAKH,EAAIA,EACdG,mCA7HGgB,EAAGC,GACb,OAAOD,EAAEE,QAAQC,IAAIF,oCAcND,EAAGC,GAClB,OAAOD,EAAEE,QAAQE,SAASH,oCAcXD,EAAGC,GAClB,OAAOD,EAAEE,QAAQG,SAASJ,kCAgBbD,EAAGC,GAChB,OAAOD,EAAEE,QAAQP,OAAOM,kCAeXD,EAAGM,GAChB,OAAON,EAAEE,QAAQK,OAAOD,oCAOTN,EAAGC,GAClB,OAAOD,EAAEQ,SAASP,YCoGLQ,aAtLb,SAAAA,EAAYC,EAAQ9B,EAAGC,EAAI8B,EAAGC,GAAK9B,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,GACjCzB,KAAK4B,GAAKA,EACV5B,KAAK0B,OAASA,EACd1B,KAAK6B,IAAM,IAAIlC,EAASC,EAAGC,GAC3BG,KAAK8B,UAAY,IAAInC,EAAS,EAAG,GACjCK,KAAK8B,UAAUP,OAAOI,GACtB3B,KAAK+B,SAAW,EAEhB/B,KAAKgC,QAAU,IAEfhC,KAAKiC,OAAS,IACdjC,KAAKkC,UAAY,QACjBlC,KAAKmC,OAAS,KACdnC,KAAKoC,KAAO,GACZpC,KAAKqC,QAAsB,IAAZrC,KAAKoC,KAEpBpC,KAAKsC,SAAW,GAEhBtC,KAAKuC,QAAU,4DAGHd,GACZ,OAAOzB,KAAK6B,IAAIL,SAASC,EAAKI,0CAGnB,IAAAW,EAAAxC,KAGX,OAFkBA,KAAK0B,OAAfe,MAGLC,IAAI,SAACzB,GAAD,OAAAnB,OAAA6C,EAAA,EAAA7C,CAAA,GAAamB,EAAb,CAAgBO,SAAUgB,EAAKI,cAAc3B,OACjD4B,OAAO,SAAC5B,GAAD,OAAOA,EAAEO,SAAWgB,EAAKP,SAChCY,OAAO,SAAC5B,GAAD,OAAOuB,EAAKZ,IAAMX,EAAEW,KAC3BiB,OAAO,SAAA5B,GACJ,IAAMD,EAAIwB,EAAKV,UAAUgB,UAAYN,EAAKX,IAAIkB,QAAQ9B,EAAEY,KAClDF,EAAIa,EAAKN,UAAY,EAC3B,OAAOlB,GAAKW,GAAKX,EAAIW,iCAKxBqB,EAAKC,GACR,IAAIC,EAAI,EACJF,EAAM,IACRE,EAAI9C,KAAKS,IAAImC,EAAKhD,KAAKgC,UAErBgB,EAAM,IACRE,EAAI9C,KAAKU,IAAIkC,GAAMhD,KAAKgC,UAG1BhC,KAAKuC,QAAUW,EAAID,EACnBjD,KAAK8B,UAAUP,OAAO2B,kCAGjBpB,EAAWmB,GAChBjD,KAAKmD,KAAKnD,KAAK8B,UAAUgB,UAAYhB,EAAWmB,oCAGzCnB,EAAWmB,GAClBjD,KAAKmD,OAAOnD,KAAK8B,UAAUgB,UAAYhB,GAAYmB,mCAG7CA,GAAW,IAAAG,EAAApD,KACjBA,KAAK6B,IAAIV,IAAIxB,EAAS0B,SAASrB,KAAK8B,UAAWmB,EAAY,KAE3D,IAAMI,EAAUrD,KAAKsD,aACfC,EAASF,EAAQzC,OAEvB,GADAZ,KAAKmC,OAAS,KACVoB,EAMF,GALAvD,KAAKsC,SAAWe,EACbG,KAAK,SAACxC,EAAGC,GAAJ,OAAUA,EAAEO,SAAWR,EAAEQ,WAC9BqB,OAAO,SAAC5B,GAAD,OAAOA,EAAEO,SAAW4B,EAAKf,UAG/BrC,KAAKsC,SAAS1B,OAChBZ,KAAKsC,SAASmB,QAAQ,SAACxC,GAAD,OAAOmC,EAAKM,SAASN,EAAKvB,IAAIkB,QAAQ9B,EAAEY,KAAMoB,SAC/D,CACL,IAAMU,EAAYN,EAAQO,OACxB,SAACC,EAAKC,GAIJ,OAHAD,EAAIjE,GAAKkE,EAAIjC,IAAIjC,EACjBiE,EAAIhE,GAAKiE,EAAIjC,IAAIhC,EAEVgE,GAET,CAAEjE,EAAG,EAAGC,EAAG,IAGPkE,EAAU,IAAIpE,EAClBgE,EAAU/D,EAAI2D,EACdI,EAAU9D,EAAI0D,GAGVS,EAAShE,KAAK6B,IAAIkB,QAAQgB,GAEhC/D,KAAKiE,OAAOD,EAAQf,GACpBjD,KAAKmC,OAAS4B,EAIlB,IAAMG,EAAW,SAACC,EAAOtD,EAAKC,GAC5B,OAAIqD,EAAQrD,EACHD,EAGLsD,EAAQtD,EACHC,EAGFqD,GA9CQC,EAiDSpE,KAAK0B,OAAO2C,MAA9BC,EAjDSF,EAiDTE,MAAOC,EAjDEH,EAiDFG,OAET3E,EAAIsE,EAASlE,KAAK6B,IAAIjC,EAAG,EAAG0E,GAC5BzE,EAAIqE,EAASlE,KAAK6B,IAAIhC,EAAG,EAAG0E,GAClCvE,KAAK6B,IAAI2C,IAAI5E,EAAGC,kCAGX,IAAA4E,EACkBzE,KAAK0B,OAApBgD,EADHD,EACGC,IACOC,EAFVF,EACQJ,MACLO,MACFA,GAAmB,GAAXD,GAAgB3E,KAAK4B,IAAM+C,EAHpCE,EAIY7E,KAAK6B,IAAdjC,EAJHiF,EAIGjF,EAAGC,EAJNgF,EAIMhF,EACGe,EAAWZ,KAAjBoC,KACFkC,EAAQ1D,EAAS,EAEvB8D,EAAII,OAEJJ,EAAIK,UAAUnF,EAAGC,GACjB6E,EAAInD,OAAOvB,KAAK8B,UAAUkD,YAE1BN,EAAIO,YACAjF,KAAK4B,IAAM+C,EACbD,EAAIQ,YAAJ,UAEAR,EAAIQ,YAAJ,UAEFR,EAAIS,OAAO,GAAIb,GACfI,EAAIU,OAAOxE,EAAQ,GACnB8D,EAAIU,OAAO,EAAGd,GACdI,EAAIU,OAAOd,EAAO,GAClBI,EAAIW,YACJX,EAAIY,SAEAV,IACFF,EAAIS,OAAO,EAAG,GACdT,EAAIa,IAAI,EAAG,EAAGvF,KAAKiC,QAAUjC,KAAKkC,UAAY,EAAIlC,KAAKkC,UAAY,GACnEwC,EAAIU,OAAO,EAAG,GACdV,EAAIQ,YAAJ,YACAR,EAAIY,UAGNZ,EAAIc,UAEAZ,IACF5E,KAAKsC,SAASmB,QAAQ,SAACzC,GACrB0D,EAAIO,YACJP,EAAIa,IAAIvE,EAAEa,IAAIjC,EAAGoB,EAAEa,IAAIhC,EAAG,EAAG,EAAG,EAAIO,KAAKqF,IACzCf,EAAIgB,UAAJ,UACAhB,EAAIW,YACJX,EAAIiB,SAGNjB,EAAIkB,KAAO,aACXlB,EAAImB,SAAJ,GAAAC,OAAgB9F,KAAK4B,IAAMhC,EAAI,GAAIC,IAGjC+E,GAAyB,OAAhB5E,KAAKmC,SAChBuC,EAAIO,YACJP,EAAIa,IAAIvF,KAAKmC,OAAOvC,EAAGI,KAAKmC,OAAOtC,EAAG,EAAG,EAAG,EAAIO,KAAKqF,IACrDf,EAAIgB,UAAJ,UACAhB,EAAIW,YACJX,EAAIiB,OAEJjB,EAAIO,YACJP,EAAIS,OAAOnF,KAAKmC,OAAOvC,EAAGI,KAAKmC,OAAOtC,GACtC6E,EAAIU,OAAOxF,EAAGC,GACd6E,EAAIQ,YAAJ,YACAR,EAAIY,udCHKS,0CA/KX,SAAAA,EAAYC,GAAO,IAAAxD,EAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACfvD,EAAAyD,EAAAC,KAAAlG,KAAMgG,IAED3B,MAAQ,CACTO,MAAO,EACPuB,IAAK,IAGT3D,EAAK4D,SAAU,EACf5D,EAAKkC,IAAM,KACXlC,EAAK6D,KAAO,CAAC,IAEb7D,EAAKC,MAAQ,GAEbD,EAAK8D,MAAQ,GAEb9D,EAAK+D,uBAAyB/D,EAAK+D,uBAAuBC,KAA5B1G,OAAA2G,EAAA,EAAA3G,CAAA0C,IAG9BA,EAAKkE,MAAQ,EAnBElE,kDAsBfmE,GAAM,IACCR,EAAOnG,KAAKqE,MAAZ8B,IACPA,EAAIS,KAAKD,GACT3G,KAAK6G,SAAS,CAACV,IAAKA,uCAIpBnG,KAAK6G,SAAS,CAACV,IAAK,uCAGd7B,EAAOC,EAAQuC,GAUrB,IAV2B,IACnBC,EAAc/G,KAAKqE,MAAnB0C,UACAC,EAAUhH,KAAVgH,MAEFC,EAAO7G,KAAK8G,KAAK3C,EAASwC,GAAa,EACvCI,EAAO/G,KAAK8G,KAAK5C,EAAQyC,GAAa,EAEtCK,EAAML,EAAY,IAElBV,EAAO,IAAIgB,MAAMF,GACdvH,EAAI,EAAGA,EAAIuH,EAAMvH,IAAK,CAC3ByG,EAAKzG,GAAK,IAAIyH,MAAMJ,GACpB,IAAK,IAAIpH,EAAI,EAAGA,EAAIoH,EAAMpH,IACtBwG,EAAKzG,GAAGC,GAAKyH,WAAWN,EAAMpH,EAAIwH,EAAKvH,EAAIuH,EAAKN,IAAOS,QAAQ,GAIvE,OAAOlB,8CAGS,IAAAjD,EAAApD,KACVwH,EAASxH,KAAKyH,KAAKD,OACzBxH,KAAKwH,OAASA,EACdxH,KAAK0E,IAAM8C,EAAOE,WAAW,MAE7BC,OAAOC,iBAAiB,OAAQ,kBAC5BxE,EAAKyE,IAAMC,sBAAsB,kBAAM1E,EAAK2E,2BANhC,IAAAC,EAQQhI,KAAKuG,yBAAtBjC,EARS0D,EAQT1D,MAAOC,EAREyD,EAQFzD,OACdoD,OAAOC,iBAAiB,SAAU5H,KAAKuG,wBAEvC,IAAK,IAAI0B,EAAI,EAAGA,GAAKjI,KAAKsG,MAAO2B,IAAK,CAClC,IAAMrI,EAAIQ,KAAK8H,MAAM9H,KAAK+H,SAAW7D,GAC/BzE,EAAIO,KAAK8H,MAAM9H,KAAK+H,SAAW5D,GAC/B5C,EAAIvB,KAAK+H,UAAY,EAAE/H,KAAKqF,IAElCzF,KAAKyC,MAAMmE,KAAK,IAAInF,EAAKzB,KAAMJ,EAAGC,EAAG8B,EAAGsG,IAG5CjI,KAAK6G,4DAGgB,IAAAuB,EACeT,OAE9BvF,EAAO,CAAEkC,MAHM8D,EACbC,WAE0B9D,OAHb6D,EACDE,aAKpB,OAFAtI,KAAK6G,SAASzE,GAEPA,iDAIPmG,qBAAqBvI,KAAK6H,KAC1BF,OAAOa,oBAAoB,SAAUxI,KAAKuG,uEAI1CvG,KAAKyI,GAAKzI,KAAK0I,QACf1I,KAAK2I,aAEL3I,KAAK4I,YAEL5I,KAAK6I,gDAGG,IAAAC,EAAA9I,KACRA,KAAK0G,QACL1G,KAAK6H,IAAMC,sBAAsB,kBAAMgB,EAAKf,8DAGnC,IAAAgB,EACiB/I,KAAKqE,MAAvBC,EADCyE,EACDzE,MAAOC,EADNwE,EACMxE,OACCvE,KAAR0E,IAEJsE,UAAU,EAAG,EAAG1E,EAAOC,mCAM3B,OAFa,IAAI0E,MAELC,+CAGH/E,EAAOgF,EAAIC,GACpB,OAASjF,EAAQgF,EAAG,KAAOC,EAAG,GAAKA,EAAG,KAAQD,EAAG,GAAKA,EAAG,IAAMC,EAAG,oCAG7DC,EAAIC,EAAIC,EAAIC,GACjB,IAAM5J,EAAIyJ,EAAKE,EACT1J,EAAIyJ,EAAKE,EAEf,OAAOpJ,KAAKK,KAAKb,EAAIA,EAAIC,EAAIA,iCAG3BsE,EAAOgF,EAAIC,GACb,OAASjF,EAAQgF,EAAG,KAAOC,EAAG,GAAKA,EAAG,KAAQD,EAAG,GAAKA,EAAG,IAAMC,EAAG,0CAIlE,IAAMK,EAAUzJ,KAAK0I,QADVgB,EAEoB1J,KAAvB2J,SACFC,EAAOH,QAHF,IAAAC,EAEQD,EAFRC,GASX,OAJA1J,KAAK2J,SAAWF,EAEhBzJ,KAAK6G,SAAS,CAAC5D,UAAWwG,IAEnBG,sCAGC,IAAAC,EACmD7J,KAAKqE,MAE1DpB,GAHE4G,EACAvF,MADAuF,EACOtF,OADPsF,EACe9C,UADf8C,EAC0BC,OAD1BD,EACkCE,MADlCF,EACyCG,MACjChK,KAAR0E,IACU1E,KAAKiK,gBAEvBjK,KAAK2I,aACL3I,KAAKyC,MAAMgB,QAAQ,SAAAxC,GAAC,OAAIA,EAAEiJ,QAAQjH,KAClCjD,KAAKyC,MAAMgB,QAAQ,SAAAxC,GAAC,OAAIA,EAAEkJ,0CAGrB,IAAAC,EAAApK,KAAAqK,EAC4BrK,KAAKqE,MAA9BC,EADH+F,EACG/F,MAAOC,EADV8F,EACU9F,OAAQK,EADlByF,EACkBzF,MAEvB,OACI0F,EAAAtJ,EAAAuJ,cAAA,OAAKC,UAAW,QACZF,EAAAtJ,EAAAuJ,cAAA,OAAKC,UAAU,MACXF,EAAAtJ,EAAAuJ,cAAA,SACID,EAAAtJ,EAAAuJ,cAAA,SAAOE,QAAS,SAAhB,SACAH,EAAAtJ,EAAAuJ,cAAA,UAAQ3I,GAAI,QAASuC,MAAOS,EAAO8F,SAAU,SAACC,GAAD,OAAOP,EAAKvD,SAAS,CAACjC,MAAO+F,EAAEC,OAAOzG,UAC/EmG,EAAAtJ,EAAAuJ,cAAA,UAAQpG,MAAO,GAAf,OACAmG,EAAAtJ,EAAAuJ,cAAA,UAAQpG,OAAQ,GAAhB,MACCkD,MAAMwD,KAAKxD,MAAMrH,KAAKsG,OAAOwE,QAAQjI,OAAO,SAAAoF,GAAC,OAAIA,IAAGvF,IAAI,SAAAuF,GAAC,OAAIqC,EAAAtJ,EAAAuJ,cAAA,UAAQQ,IAAG,QAAAjF,OAAUmC,GAAK9D,MAAO8D,GAAIA,QAI/GqC,EAAAtJ,EAAAuJ,cAAA,OAAKC,UAAW,QACZF,EAAAtJ,EAAAuJ,cAAA,UAAQS,IAAI,SAAU1G,MAAOA,EAAOC,OAAQA,aAzK9C0G,aCMEC,QACW,cAA7BvD,OAAOwD,SAASC,UAEe,UAA7BzD,OAAOwD,SAASC,UAEhBzD,OAAOwD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjB,EAAAtJ,EAAAuJ,cAACiB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c270076.chunk.js","sourcesContent":["class Vector2D {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    add(v) {\n        if (v instanceof Vector2D) {\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t} else {\n\t\t\tthis.x += v;\n\t\t\tthis.y += v;\n\t\t}\n\n\t\treturn this;\n    }\n\n\tstatic add(a, b) {\n\t\treturn a.clone().add(b);\n\t}\n\n    subtract(v) {\n\t\tif (v instanceof Vector2D) {\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t} else {\n\t\t\tthis.x -= v;\n\t\t\tthis.y -= v;\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic subtract(a, b) {\n\t\treturn a.clone().subtract(b);\n\t}\n\n\tmultiply(v) {\n\t\tif (v instanceof Vector2D) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t} else {\n\t\t\tthis.x *= v;\n\t\t\tthis.y *= v;\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic multiply(a, b) {\n\t\treturn a.clone().multiply(b);\n\t}\n\n\tdivide(v) {\n\t\tif (v instanceof Vector2D) {\n\t\t\tif(v.x != 0) this.x /= v.x;\n\t\t\tif(v.y != 0) this.y /= v.y;\n\t\t} else {\n\t\t\tif(v != 0) {\n\t\t\t\tthis.x /= v;\n\t\t\t\tthis.y /= v;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic divide(a, b) {\n\t\treturn a.clone().divide(b);\n\t}\n\n\trotate(rad) {\n\t\tconst { x, y } = this;\n\t    //const rad = deg * (Math.PI/180);\n\t    const cos = Math.cos(rad);\n\t    const sin = Math.sin(rad);\n\n\t\tconst dp = 10000;\n\n\t    this.x = Math.round(dp*(x * cos - y * sin))/dp;\n\t\tthis.y = Math.round(dp*(x * sin + y * cos))/dp;\n\t};\n\n\tstatic rotate(a, deg) {\n\t\treturn a.clone().rotate(deg);\n\t}\n\n\tdistance(v) {\n\t\treturn Math.hypot(this.x - v.x, this.y - v.y);\n\t}\n\n\tstatic distance(a, b) {\n\t\treturn a.distance(b);\n\t}\n\n    equals(v) {\n\t\treturn this.x == v.x && this.y == v.y;\n\t}\n\n\tequal(v) {\n\t\treturn this.equals(v);\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y;\n\t}\n\t\n    cross(v) {\n\t\treturn this.x * v.y - this.y * v.x\n\t}\n\t\n    length() {\n\t\treturn Math.sqrt(this.dot(this));\n\t}\n\t\n    normalize() {\n\t\treturn this.divide(this.length());\n\t}\n\t\n    min() {\n\t\treturn Math.min(this.x, this.y);\n\t}\n\t\n    max() {\n\t\treturn Math.max(this.x, this.y);\n\t}\n\n\tradians() {\n\t\treturn -Math.atan2(this.y, this.x);\n\t}\n\t\n    toAngles() {\n\t\treturn -Math.atan2(-this.y, this.x);\n\t}\n\t\n    angleTo(a) {\n\t\treturn -Math.atan2(a.y - this.y, a.x - this.x);\n\t}\n\t\n\tclone() {\n\t\treturn new Vector2D(this.x, this.y);\n\t}\n\n\tset(x, y) {\n\t\tthis.x = x; this.y = y;\n\t\treturn this;\n\t}\n}\n\nexport default Vector2D;","import Vector2D from \"./Vector2D\";\n\nlet bob = 1;\n\nconst deg = (r) => r * (180 / Math.PI);\nconst rad = (d) => d * (Math.PI / 180);\n\nclass boid {\n  constructor(parent, x, y,  r, id) {\n    this.id = id;\n    this.parent = parent;\n    this.pos = new Vector2D(x, y);\n    this.direction = new Vector2D(1, 0);\n    this.direction.rotate(r);\n    this.velocity = 1;\n\n    this.maxTurn = 0.05;\n\n    this.vision = 150;\n    this.visionArc = 3.14159;\n    this.center = null;\n    this.size = 15;\n    this.minDist = this.size * 2.5;\n\n    this.avoiding = [];\n\n    this.turning = 0;\n  }\n\n  getDistanceTo(boid) {\n    return this.pos.distance(boid.pos);\n  }\n\n  getVisible() {\n    const { boids } = this.parent;\n\n    return boids\n      .map((b) => ({ ...b, distance: this.getDistanceTo(b) }))\n      .filter((b) => b.distance < this.vision)\n      .filter((b) => this.id != b.id)\n      .filter(b => {\n          const a = this.direction.radians() - this.pos.angleTo(b.pos);\n          const r = this.visionArc / 2;\n          return a > -r && a < r;\n      })\n      ;\n  }\n\n  turn(amt, frameTime) {\n    let t = 0;\n    if (amt > 0) {\n      t = Math.min(amt, this.maxTurn);\n    }\n    if (amt < 0) {\n      t = Math.max(amt, -this.maxTurn);\n    }\n\n    this.turning = t * frameTime;\n    this.direction.rotate(t);\n  }\n\n  turnTo(direction, frameTime) {\n    this.turn(this.direction.radians() - direction, frameTime);\n  }\n\n  turnFrom(direction, frameTime) {\n    this.turn(-(this.direction.radians() - direction), frameTime);\n  }\n\n  doFrame(frameTime) {\n    this.pos.add(Vector2D.multiply(this.direction, frameTime / 10));\n\n    const visible = this.getVisible();\n    const numVis = visible.length;\n    this.center = null;\n    if (numVis) {\n      this.avoiding = visible\n        .sort((a, b) => b.distance - a.distance)\n        .filter((b) => b.distance < this.minDist)\n      ;\n\n      if (this.avoiding.length) {\n        this.avoiding.forEach((b) => this.turnFrom(this.pos.angleTo(b.pos), frameTime));\n      } else {\n        const avgValues = visible.reduce(\n          (acc, cur) => {\n            acc.x += cur.pos.x;\n            acc.y += cur.pos.y;\n\n            return acc;\n          },\n          { x: 0, y: 0 }\n        );\n\n        const avgVect = new Vector2D(\n          avgValues.x / numVis,\n          avgValues.y / numVis\n        );\n\n        const avgAng = this.pos.angleTo(avgVect);\n\n        this.turnTo(avgAng, frameTime);\n        this.center = avgVect;\n      }\n    }\n\n    const inBounds = (value, min, max) => {\n      if (value > max) {\n        return min;\n      }\n\n      if (value < min) {\n        return max;\n      }\n\n      return value;\n    };\n\n    const { width, height } = this.parent.state;\n\n    const x = inBounds(this.pos.x, 0, width);\n    const y = inBounds(this.pos.y, 0, height);\n    this.pos.set(x, y);\n  }\n\n  draw() {\n    const { ctx, state } = this.parent;\n    const { debug: _debug } = state;\n    const debug = _debug == -1 || this.id == _debug;\n    const { x, y } = this.pos;\n    const { size: length } = this;\n    const width = length / 3;\n\n    ctx.save();\n\n    ctx.translate(x, y);\n    ctx.rotate(this.direction.toAngles());\n\n    ctx.beginPath();\n    if (this.id == _debug) {\n      ctx.strokeStyle = `#ff00ff`;\n    } else {\n      ctx.strokeStyle = `#ffffff`;\n    }\n    ctx.moveTo(0, -width);\n    ctx.lineTo(length, 0);\n    ctx.lineTo(0, width);\n    ctx.lineTo(width, 0);\n    ctx.closePath();\n    ctx.stroke();\n\n    if (debug) {\n      ctx.moveTo(0, 0);\n      ctx.arc(0, 0, this.vision, -(this.visionArc / 2), this.visionArc / 2); // 2 * Math.PI);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = `#ffffff33`;\n      ctx.stroke();\n    }\n\n    ctx.restore();\n\n    if (debug) {\n      this.avoiding.forEach((a) => {\n        ctx.beginPath();\n        ctx.arc(a.pos.x, a.pos.y, 2, 0, 2 * Math.PI);\n        ctx.fillStyle = `#ffff00`;\n        ctx.closePath();\n        ctx.fill();\n      });\n\n      ctx.font = \"10px Arial\";\n      ctx.fillText(`${this.id}`, x + 10, y);\n    }\n\n    if (debug && this.center !== null) {\n      ctx.beginPath();\n      ctx.arc(this.center.x, this.center.y, 2, 0, 2 * Math.PI);\n      ctx.fillStyle = `#ff0000`;\n      ctx.closePath();\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.moveTo(this.center.x, this.center.y);\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = `#00FF00aa`;\n      ctx.stroke();\n    }\n  }\n}\n\nexport default boid;\n","import React, { Component } from \"react\";\nimport { makeNoise3D } from \"open-simplex-noise\";\nimport \"./App.css\";\nimport boid from \"./boid\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            debug: 0,\n            log: [],\n        };\n\n        this.drawing = false;\n        this.ctx = null;\n        this.data = [[]];\n\n        this.boids = [];\n\n        this.count = 50;\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n        \n        this.frame = 0;\n    }\n\n    log(line) {\n        const {log} = this.state;\n        log.push(line);\n        this.setState({log: log});\n    }\n\n    clearLog() {\n        this.setState({log: []});\n    }\n\n    getValues(width, height, time) {\n        const { pixelSize } = this.state;\n        const { noise } = this;\n\n        const rows = Math.ceil(height / pixelSize) + 1;\n        const cols = Math.ceil(width / pixelSize) + 1;\n\n        const mod = pixelSize / 100;\n\n        const data = new Array(cols);\n        for (let x = 0; x < cols; x++) {\n            data[x] = new Array(rows);\n            for (let y = 0; y < rows; y++) {\n                data[x][y] = parseFloat(noise(x * mod, y * mod, time)).toFixed(4);\n            }\n        }\n\n        return data;\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n\n        window.addEventListener('load', () =>\n            this.rAF = requestAnimationFrame(() => this.updateAnimationState())\n        );\n        const {width, height} = this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n        for (let i = 1; i <= this.count; i++) {\n            const x = Math.floor(Math.random() * width);\n            const y = Math.floor(Math.random() * height);\n            const r = Math.random() * (2*Math.PI);\n\n            this.boids.push(new boid(this, x, y, r, i));\n        }\n\n        this.setState();\n    }\n\n    updateWindowDimensions() {\n        const { innerWidth, innerHeight } = window;\n\n        const size = { width: innerWidth, height: innerHeight }\n        this.setState(size);\n\n        return size;\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.rAF);\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateAnimationState() {\n        this.ts = this.getTS();\n        this.clearFrame();\n\n        this.drawScene();\n\n        this.nextFrame();\n    }\n\n    nextFrame() {\n        this.frame++;\n        this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n    }\n\n    clearFrame() {\n        const { width, height } = this.state;\n        const { ctx } = this;\n\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    getTS() {\n        const date = new Date();\n\n        return date.getTime();\n    }\n\n    convertRange(value, r1, r2) {\n        return ((value - r1[0]) * (r2[1] - r2[0])) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    distance(x1, y1, x2, y2) {\n        const x = x1 - x2;\n        const y = y1 - y2;\n\n        return Math.sqrt(x * x + y * y);\n    }\n\n    scale(value, r1, r2) {\n        return ((value - r1[0]) * (r2[1] - r2[0])) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    getFrameTime() {\n        const current = this.getTS();\n        const { prevTime = current } = this;\n        const diff = current - prevTime;\n\n        this.prevTime = current;\n\n        this.setState({frameTime: current});\n        \n        return diff;\n    }\n\n    drawScene() {\n        const { width, height, pixelSize, cutoff, color, speed } = this.state;\n        const { ctx } = this;\n        const frameTime = this.getFrameTime();\n        \n        this.clearFrame();\n        this.boids.forEach(b => b.doFrame(frameTime));\n        this.boids.forEach(b => b.draw());\n    }\n\n    render() {\n        const { width, height, debug } = this.state;\n\n        return (\n            <div className={\"grid\"}>\n                <div className=\"ui\">\n                    <p>\n                        <label htmlFor={'debug'}>Debug</label>\n                        <select id={'debug'} value={debug} onChange={(e) => this.setState({debug: e.target.value})}>\n                            <option value={0}>Off</option>\n                            <option value={-1}>On</option>\n                            {Array.from(Array(this.count).keys()).filter(i => i).map(i => <option key={`debug${i}`} value={i}>{i}</option>)}\n                        </select>\n                    </p>\n                </div>\n                <div className={\"dots\"}>\n                    <canvas ref=\"canvas\"  width={width} height={height} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}